package test2;


import javax.servlet.ServletContext;
import javax.servlet.ServletRequest;
import javax.ws.rs.Consumes;
import javax.ws.rs.FormParam;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;

import entities.User;
import html.HTMLGenerator;


// Plain old Java Object it does not extend as class or implements 
// an interface

// The class registers its methods for the HTTP GET request using the @GET annotation. 
// Using the @Produces annotation, it defines that it can deliver several MIME types,
// text, XML and HTML. 

// The browser requests per default the HTML MIME type.

//Sets the path to base URL + /hello
@Path("/")
public class Class1 {


	/*
  // This method is called if TEXT_PLAIN is request
  @GET
  @Produces(MediaType.TEXT_PLAIN)
  public String sayPlainTextHello() {
    return "Hello Jersey (Plain)";
  }

  // This method is called if XML is request
  @GET
  @Produces(MediaType.TEXT_XML)
  public String sayXMLHello() {
    return "<?xml version=\"1.0\"?>" + "<hello> Hello Jersey (XML)" + "</hello>";
  }

  //plugins/org.eclipse.wst.server.core/tmp0
  // This method is called if HTML is request
  @GET
  @Produces(MediaType.TEXT_HTML)
  public String sayHtmlHello() {
    return "<html> " + "<title>" + "Hello Jersey" + "</title>"
        + "<body><h1>" + "Hello Jersey (HTML)" + "</body></h1>" + "</html> ";
  }
  */
  
  @POST
  @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
  @Path("login")
  public String sayHtmlHello2(@Context ServletContext context ,@FormParam("name") String name, @FormParam("pwd") String pwd) {
	String reload = "<script>window.open('../../index.html','_self')</script>";
	String loadStudent = "<script>window.open('../../loginStudent.html','_self')</script>";
	String loadTeacher = "<script>window.open('../../loginTeacher.html','_self')</script>";
	String loadAdmin = "<script>var myWindow = window.open('../../loginAdmin.html','_self'); myWindow.document.getElementById('username').innerHTML ='"+name+"';</script>";		
	
	System.out.println("LOGIN CALLED ("+name+"/"+pwd+")");
	
	if(DBManager.getInstance().checkPassword(name, pwd)){
		User user = DBManager.getInstance().getUser(name);
		switch (user.getAccessLevel()){
			case 1 :
				return(loadStudent);
			case 2 :
				return(loadTeacher);
			case 3:
				return(loadAdmin);
		}
	}
    return reload;
  }
  
  @GET
  @Consumes(MediaType.TEXT_PLAIN)
  @Produces(MediaType.TEXT_PLAIN)
  @Path("getAccessLevel")
  public String getAccessLevel(@QueryParam("name") String name, @QueryParam("pwd") String pwd){
	  System.out.println(name+"-"+pwd);
	  if(DBManager.getInstance().checkPassword(name, pwd)){
		  User user = DBManager.getInstance().getUser(name);
		  return(user.getAccessLevel().toString());
	  }
	  return("0");
  }
  
  @POST
  @Consumes(MediaType.APPLICATION_FORM_URLENCODED)
  @Produces(MediaType.TEXT_PLAIN)
  @Path("saveCompetenceStructure")
  public String saveCompetenceStructure(String body, @FormParam("data") String data, @FormParam("name") String name, @QueryParam("pwd") String pwd){
	  System.out.println("POST - in header: "+body);
	  return("OK");
  }
  
  //Method for requesting html-body
  @GET
  @Produces(MediaType.TEXT_HTML)
  public String getBody() {
    return HTMLGenerator.getHTMLStudent();
  }
  
  /*

  //adding/deleting users of DB
  @POST
  public String addNewUser(){
	  return("OK");
  }
  
  @POST
  public String deleteExistingUser(){
	  return("OK");
  }
  
  //add/delete/request competence structure
  @POST
  public String addNewCompetenceStructure(){
	  return("OK");
  }
  
  @POST
  public String deleteExistingCompetenceStructure(){
	  return("OK");
  }
  
  @GET
  public String getCompetenceStructure(){
	  return("OK");
  }
  
  //add/delete/request new task
  @POST
  public String addNewTask(){
	  return("OK");
  }
  
  @POST
  public String deleteExistingTask(){
	  return("OK");
  }
  
  @GET
  public String getTask(){
	  return("OK");
  }
*/
} 

