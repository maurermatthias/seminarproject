package knowledgestructureelements;

import java.util.HashMap;
import java.util.List;

import test2.DBConnector;

public class CompetenceState {
	HashMap<Competence, Double> map = new HashMap<Competence, Double>();
	public int cstructureId;
	public int studentId;
	public int classId;
	public CompetenceStructure compStr;
	
	public CompetenceState(int  userId, int classId){
		this.studentId = userId;
		this.classId = classId;
		this.cstructureId = DBConnector.getCstructureIdByClassId(classId);
		compStr = DBConnector.getCompetenceStructure(cstructureId);
		loadCompetenceState();
	}
	
	private void loadCompetenceState(){
		Boolean initialiseCompetenceState = false;
		for(Competence competence : compStr.competences){
			Double value = DBConnector.getCompetenceValue(studentId, classId, DBConnector.getCompetenceIdByName(competence.name));
			if(value == -1){
				initialiseCompetenceState = true;
				break;
			}
			map.put(competence,value);
		}
		if(initialiseCompetenceState)
			setInitialCompetenceState();
			
	}
	
	private void setInitialCompetenceState(){
		//create initial competence state -> watch out when having circles!
		for(Competence competence : compStr.competences){
			Double value = 0.0;
			map.put(competence,value);
			DBConnector.setCompetenceValue(studentId, classId, DBConnector.getCompetenceIdByName(competence.name), value);
		}
	}
	
	private boolean store(){
		return true;
	}
	
}
