package test2;


import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import entities.User;
import html.HTMLGenerator;


// Plain old Java Object it does not extend as class or implements 
// an interface

// The class registers its methods for the HTTP GET request using the @GET annotation. 
// Using the @Produces annotation, it defines that it can deliver several MIME types,
// text, XML and HTML. 

// The browser requests per default the HTML MIME type.

//Sets the path to base URL + /hello
@Path("/")
public class Class1 {

  
  
  @GET
  @Consumes(MediaType.TEXT_PLAIN)
  @Produces(MediaType.TEXT_PLAIN)
  @Path("getAccessLevel")
  public String getAccessLevel(@QueryParam("name") String name, @QueryParam("pwd") String pwd){
	  System.out.println(name+"-"+pwd);
	  if(DBManager.getInstance().checkPassword(name, pwd)){
		  User user = DBManager.getInstance().getUser(name);
		  return(user.getAccessLevel().toString());
	  }
	  return("0");
  }
  
  @POST
  @Consumes(MediaType.TEXT_PLAIN)
  @Produces(MediaType.TEXT_PLAIN)
  @Path("saveCompetenceStructure")
  public String saveCompetenceStructure(String body, @QueryParam("name") String name, @QueryParam("pwd") String pwd){
	  System.out.println("POST - in header: "+body);
	  System.out.println("POST - in header: "+name + " - " +pwd);
	  DBManager.getInstance().doesTableExists(name);
	  return("OK");
  }
  
  //Method for requesting html-body
  @GET
  @Produces(MediaType.TEXT_HTML)
  public String getBody() {
    return HTMLGenerator.getHTMLStudent();
  }
  
  /*

  //adding/deleting users of DB
  @POST
  public String addNewUser(){
	  return("OK");
  }
  
  @POST
  public String deleteExistingUser(){
	  return("OK");
  }
  
  //add/delete/request competence structure
  @POST
  public String addNewCompetenceStructure(){
	  return("OK");
  }
  
  @POST
  public String deleteExistingCompetenceStructure(){
	  return("OK");
  }
  
  @GET
  public String getCompetenceStructure(){
	  return("OK");
  }
  
  //add/delete/request new task
  @POST
  public String addNewTask(){
	  return("OK");
  }
  
  @POST
  public String deleteExistingTask(){
	  return("OK");
  }
  
  @GET
  public String getTask(){
	  return("OK");
  }
*/
} 

